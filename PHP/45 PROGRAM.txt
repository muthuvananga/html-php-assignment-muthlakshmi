45)
<?php
function array_diff_recursive($array1, $array2) {
    $difference = [];

    foreach ($array1 as $key => $value) {
        if (is_array($value)) {
            // If key exists in $array2 and is also an array, recurse
            if (isset($array2[$key]) && is_array($array2[$key])) {
                $new_diff = array_diff_recursive($value, $array2[$key]);
                if (!empty($new_diff)) {
                    $difference[$key] = $new_diff;
                }
            } else {
                // If key doesn't exist or is not an array, whole subtree is different
                $difference[$key] = $value;
            }
        } else {
            // For scalar values, check if key missing or value differs
            if (!array_key_exists($key, $array2) || $array2[$key] !== $value) {
                $difference[$key] = $value;
            }
        }
    }

    return $difference;
}

// Example usage:

$array1 = [
    'a' => 1,
    'b' => ['x' => 10, 'y' => 20],
    'c' => 3,
];

$array2 = [
    'a' => 1,
    'b' => ['x' => 10, 'y' => 25],
    'd' => 4,
];

print_r(array_diff_recursive($array1, $array2));
?>
OUTPUT:
Array
(
    [b] => Array
        (
            [y] => 20
        )

    [c] => 3
)

